// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id           String          @id @default(uuid())
  name         String          @unique
  email        String          @unique
  hashPassword String
  role         String
  secret       String
  articles     UsersArticles[]
  comments     Comment[]
}

model Comment {
  id        String  @id @default(uuid())
  message   String
  user      User    @relation(fields: [userId], references: [id])
  userId    String
  article   Article @relation(fields: [articleId], references: [id])
  articleId String
}

model Article {
  id       String          @id @default(uuid())
  title    String
  body     String
  comments Comment[]
  tags     TagsArticles[]
  authors  UsersArticles[]
}

model UsersArticles {
  userId     String
  articleId  String
  user       User     @relation(fields: [userId], references: [id])
  article    Article  @relation(fields: [articleId], references: [id])
  assignedAt DateTime @default(now())
  assignedBy String

  @@id([articleId, userId])
}

model Tag {
  id       String         @id @default(uuid())
  name     String
  color    String
  articles TagsArticles[]
}

model TagsArticles {
  tagId      String
  articleId  String
  tag        Tag      @relation(fields: [tagId], references: [id])
  article    Article  @relation(fields: [articleId], references: [id])
  assignedAt DateTime @default(now())
  assignedBy String

  @@id([articleId, tagId])
}
